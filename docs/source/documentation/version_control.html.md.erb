---
title: Version Control
---

# Version Control
Version control helps manage changes to an API without breaking existing integrations or disrupting users relying on older versions.
Version control in our API is done using URL versioning.

## URL Versioning
URL versioning involves specifying the version number in the endpoint url path. 
For example:
```
/v1/cases/{case_id}
```

Changes in version should be recorded in a version folder in app/routers with all the required routers.

New router versions should be defined in the `main.py` file.
You will need to include each router in your version directory.

```
from .routers.v1 import case_information as case_information_v1, security as security_v1

def v1_router():
    router = APIRouter(prefix="/v1")
    router.include_router(case_information_v1.router)
    router.include_router(security_v1.router)
    return router
```
In the `main.py` file you will also need to include your new version router:

```
def create_app() -> FastAPI:
    app = FastAPI(**docs_config)
    app.include_router(v1_router())

    return app
```

This will establish a version route for your endpoint.

## Including previous version routers
If you require a previous version of a router in your new version; 
include the previous version router:

```
def v2_router():
    router = APIRouter(prefix="/v2")
    router.include_router(case_information_v1.router)
    return router
```